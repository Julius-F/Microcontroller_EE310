



; Title: Temperature Controller
;---------------------
; Program Details:
;
; Description: Compare a measured value to a reference value to turn on either
; a heater or cooler then store the digits of those values in decimal in 
; registers
; File Dependencies / Libraries: None 
; Compiler: xc8, 2.4
; Author: Julius Faller
; Inputs: Measuredtempinput, Referencetempinput
; Outputs: PORTD, contreg
; Versions:
;       V1.0 3/5/24
;	V1.1 3/6/24 Fixed build issue
;	V1.3 3/7/24 Cleaned up comments


;---------------------
; Initialization
;---------------------
#include "C:\Users\jmelf\MPLABXProjects\HeaterCoolerProject.X\AssemblyConfig.inc"
#include <xc.inc>



;---------------------
; Program Inputs
;---------------------

    ; Define temperature values
#define MEASUREDTEMPINPUT   -5
#define	REFTEMPINPUT	    15

;---------------------
; Program Constants
;---------------------


;---------------------
; Definitions
;---------------------

    ; Use reg 0x25 to keep track of if measuredtemp is negative
    NEGTAG	    EQU	0X25
    REFTEMP	    EQU 0X20
    MEASUREDTEMP    EQU 0X21
    CONTREG	    EQU 0X22
    ; Registers used for converting to decimal
    NUM		    EQU 0X31
    QUO		    EQU 0X32
    ; Locations for decimal values
    REF_H	    EQU	0X62
    REF_T	    EQU	0X61
    REF_O	    EQU	0X60
    MEASURED_H	    EQU	0X72
    MEASURED_T	    EQU	0X71
    MEASURED_O	    EQU	0X70
;---------------------
; Main Program
;---------------------

    PSECT absdata,abs,ovrld
    ; Start program at 0x20
    ORG 0020H
    
    ; Enable PORTD.1 and PORTD.2 as outputs
    MOVLW   0XF9
    MOVWF   TRISD
    
    ; Assign temperature values
    MOVLW   MEASUREDTEMPINPUT
    MOVWF   MEASUREDTEMP
    MOVLW   REFTEMPINPUT
    MOVWF   REFTEMP
    
    ; Test if the input temperature is negative
    ; With 2's complement if negative MSB will be 1
    ; If negative go to negative compensation function
    BTFSC   MEASUREDTEMP,   7
    GOTO    ISNEG
    ; Set negative tag register to 0 if not negative
    MOVLW   0X00
    MOVWF   NEGTAG
    ; If positive or 0 test if less than reftemp
    MOVFF   REFTEMP, WREG
    CPFSLT  MEASUREDTEMP
    GOTO    POSTEST
    GOTO    HEAT
POSTEST:
    ; If not less than reftemp test if greater than 
    CPFSGT  MEASUREDTEMP
    GOTO    EQUTEST
    GOTO    COOL
EQUTEST:
    ; If it is neither less than or greater than it must be equal
    ; Test if equal for now to remove potential errors
    CPFSEQ  MEASUREDTEMP
    ; If it is not equal there is a problem go to sleep
    SLEEP
    GOTO    ATTEMP
    
ISNEG:
    ; Convert from 2's complement to 0 for decimal storage section
    NEGF    MEASUREDTEMP
    MOVLW   0X01
    MOVWF   NEGTAG
    ; Continue to heat module
    GOTO    HEAT
HEAT:
    ; Assign PORTD and Contreg values
    MOVLW   0X02
    MOVWF   CONTREG
    MOVLW   0X02
    MOVWF   PORTD
    GOTO    DECIMALSTORE
COOL:
    ; Assign PORTD and Contreg Values
    MOVLW   0X01
    MOVWF   CONTREG
    MOVLW   0X04
    MOVWF   PORTD
    GOTO    DECIMALSTORE
    
ATTEMP:
    ; Assign PORTD and Contreg Values
    MOVLW   0X00
    MOVWF   CONTREG
    MOVWF   PORTD
    GOTO    DECIMALSTORE
DECIMALSTORE:
    ; Store the decimal values of temperatures
    ; Convert reference temp first
    ; Use arithmetic method for converting to decimal
    MOVFF   REFTEMP,	NUM
    MOVLW   0X0A
REFD1:
    INCF    QUO,F
    SUBWF   NUM,F
    BC	    REFD1
    ADDWF   NUM,F
    DECF    QUO,F
    MOVFF   NUM,    REF_O
    MOVFF   QUO,    REF_T
    CLRF    QUO
    MOVFF   MEASUREDTEMP,   NUM
MEASD1:
    INCF    QUO,F
    SUBWF   NUM,F
    BC	    MEASD1
    ADDWF   NUM,F
    DECF    QUO,F
    MOVFF   NUM,    MEASURED_O
    MOVFF   QUO,    MEASURED_T
    
    BTFSC   NEGTAG,   0
    GOTO    NEXT
    NEGF    MEASUREDTEMP
    GOTO    NEXT
    
NEXT:
    SLEEP
    END
    
    

    

