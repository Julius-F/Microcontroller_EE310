/*
 * ---------------------
 * Title: Calculator
 * ---------------------
 * Program Details:
 *  To do basic arithmetic to two two digit inputs
 * Inputs:
 * Outputs:
 * Setup: C- Simulator
 * Date: 4/8/24
 * File Dependencies / Libraries: It is required to include the 
 * Configuration Header File 
 * Compiler: xc8, 2.4
 * Author: Julius Faller
 * Versions:
 *      V1.0: Original
 * Useful links:  
 *      Datasheet: https://ww1.microchip.com/downloads/en/DeviceDoc/PIC18(L)F26-27-45-46-47-55-56-57K42-Data-Sheet-40001919G.pdf 
 *      PIC18F Instruction Sets: https://onlinelibrary.wiley.com/doi/pdf/10.1002/9781119448457.app4 
 *      List of Instrcutions: http://143.110.227.210/faridfarahmand/sonoma/courses/es310/resources/20140217124422790.pdf 
 */

// PIC18F46K42 Configuration Bit Settings

// 'C' source line config statements



#include <xc.h> // must have this
//#include "../../../../../Program Files/Microchip/xc8/v2.40/pic/include/proc/pic18f46k42.h"
#include "C:\Program Files\Microchip\xc8\v2.46\pic\include\proc\pic18f47k42.h"
//#include "C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic18f46k42"

#define _XTAL_FREQ 4000000                 // Fosc  frequency for _delay()  library
#define FCY    _XTAL_FREQ/4

int getnum()
{
    int input;
    int exit = 0;
    while(exit == 0){
    PORTD = 0b00000010;
            if (PORTD == 0b10000010)
            {input = 3;
            exit = 1;}
            else if (PORTD == 0b01000010)
            {input = 6;
            exit = 1;}
            else if (PORTD == 0b00100010)
            {input = 9;
            exit = 1;}
            
    PORTD = 0b00000100;
            if (PORTD == 0b10000100)
            {input = 2;
            exit = 1;}
            else if (PORTD == 0b01000100)
            {input = 5;
            exit = 1;}
            else if (PORTD == 0b00100100)
            {input = 8;
            exit = 1;}
            else if (PORTD == 0b00010100)
            {input = 0;
            exit = 1;}
    PORTD = 0b00001000;
            if (PORTD == 0b10001000)
            {input = 1;
            exit = 1;}
            else if (PORTD == 0b01001000)
            {input = 4;
            exit = 1;}
            else if (PORTD == 0b00101000)
            {input = 7;
            exit = 1;}
    }
    return input;
}

int getoperator()
{
    int operator;
    PORTD = 0b00000001;
    while(operator == 0)
    {
            if (PORTD == 0b10000001)
            {operator = 1;}
            else if (PORTD == 0b01000001)
            {operator = 2;}
            else if (PORTD == 0b00100001)
            {operator = 3;}
            else if (PORTD == 0b00010001)
            {operator = 4;}
    }
    return operator;
}



void delay(int delaytime)
{
    int count = 0;
    while (count  < delaytime)
    {count += 1;}
}

int combine_inputs(int inputhigh, int inputlow)
{
    int fullinput;
    fullinput = inputlow + (inputhigh*10);
    return fullinput;
}

int execute_operation(int input1, int input2, int operator)
{
    int output;
    if(operator == 1)
    {output = input1 + input2;}
    else if(operator == 2)
    {output = input1 - input2;}
    else if(operator == 3)
    {output = input1 * input2;}
    else if(operator == 4)
    {output = input1 / input2;}
    return output;
}

void display(int display)
{
    PORTD = 0b00000010;
    int inputcheck = 0;
    while (inputcheck = 0)
    {
        if (PORTD == 0b00010010 )
        {
            PORTB = display;
            inputcheck = 1;
        }
    }
}

int X_Input_REG;
int xhigh;
int xlow;
int Y_Input_REG;
int yhigh;
int ylow;
int Operation_REG;
int Display_Result_REG;

void main(){
TRISD= 0b00001111; // Set port d to half outputs and half inputs to interface
// with the keypad
TRISB= 0b00000000; // set port b to output
ANSELB = 0;
ANSELD = 0;
for(;;)
{
    xhigh = getnum();
    delay(500000);
    xlow = getnum();
    delay(500000);
    X_Input_REG = combine_inputs(xhigh,xlow);
    PORTB = 0b10000000;
    Operation_REG = getoperator;
    delay(500000);
    yhigh = getnum();
    delay(500000);
    ylow = getnum();
    delay(500000);
    Y_Input_REG = combine_inputs(yhigh,ylow);
    PORTB = 0b11000000;
    Display_Result_REG=execute_operation(X_Input_REG,Y_Input_REG,Operation_REG);
    display(Display_Result_REG);
    Y_Input_REG = 0;
    X_Input_REG = 0;
}


}
